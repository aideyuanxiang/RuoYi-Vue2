<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.course.mapper.MyChooseCourseMapper">
    
    <resultMap type="MyChooseCourse" id="MyChooseCourseResult">
        <result property="chooseId"    column="choose_id"    />
        <result property="teacherName"    column="teacher_name"    />
        <result property="startTime"    column="start_time"    />
        <result property="courseId"    column="course_id"    />
        <result property="userId"    column="user_id"    />
        <result property="teacherId"    column="teacher_id"    />
    </resultMap>

    <sql id="selectMyChooseCourseVo">
        select choose_id, teacher_name, start_time, course_id, user_id, teacher_id from my_choose_course
    </sql>

    <select id="selectMyChooseCourseList" parameterType="MyChooseCourse" resultMap="MyChooseCourseResult">
        <include refid="selectMyChooseCourseVo"/>
        <where>  
            <if test="teacherName != null  and teacherName != ''"> and teacher_name like concat('%', #{teacherName}, '%')</if>
            <if test="startTime != null "> and start_time = #{startTime}</if>
            <if test="courseId != null "> and course_id = #{courseId}</if>
            <if test="userId != null "> and user_id = #{userId}</if>
            <if test="teacherId != null "> and teacher_id = #{teacherId}</if>
        </where>
    </select>
    
    <select id="selectMyChooseCourseByChooseId" parameterType="Long" resultMap="MyChooseCourseResult">
        <include refid="selectMyChooseCourseVo"/>
        where choose_id = #{chooseId}
    </select>
        
    <insert id="insertMyChooseCourse" parameterType="MyChooseCourse" useGeneratedKeys="true" keyProperty="chooseId">
        insert into my_choose_course
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="teacherName != null">teacher_name,</if>
            <if test="startTime != null">start_time,</if>
            <if test="courseId != null">course_id,</if>
            <if test="userId != null">user_id,</if>
            <if test="teacherId != null">teacher_id,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="teacherName != null">#{teacherName},</if>
            <if test="startTime != null">#{startTime},</if>
            <if test="courseId != null">#{courseId},</if>
            <if test="userId != null">#{userId},</if>
            <if test="teacherId != null">#{teacherId},</if>
         </trim>
    </insert>

    <update id="updateMyChooseCourse" parameterType="MyChooseCourse">
        update my_choose_course
        <trim prefix="SET" suffixOverrides=",">
            <if test="teacherName != null">teacher_name = #{teacherName},</if>
            <if test="startTime != null">start_time = #{startTime},</if>
            <if test="courseId != null">course_id = #{courseId},</if>
            <if test="userId != null">user_id = #{userId},</if>
            <if test="teacherId != null">teacher_id = #{teacherId},</if>
        </trim>
        where choose_id = #{chooseId}
    </update>

    <delete id="deleteMyChooseCourseByChooseId" parameterType="Long">
        delete from my_choose_course where choose_id = #{chooseId}
    </delete>

    <delete id="deleteMyChooseCourseByChooseIds" parameterType="String">
        delete from my_choose_course where choose_id in 
        <foreach item="chooseId" collection="array" open="(" separator="," close=")">
            #{chooseId}
        </foreach>
    </delete>
</mapper>